Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Warehouse location determination problem using decorator notation
import pyomo.environ as pyo

model = pyo.ConcreteModel(name="(WL)")

W = ['Harlingen', 'Memphis', 'Ashland']
C = ['NYC', 'LA', 'Chicago', 'Houston']
d = {('Harlingen', 'NYC'): 1956, \
     ('Harlingen', 'LA'): 1606, \
     ('Harlingen', 'Chicago'): 1410, \
     ('Harlingen', 'Houston'): 330, \
     ('Memphis', 'NYC'): 1096, \
     ('Memphis', 'LA'): 1792, \
     ('Memphis', 'Chicago'): 531, \
     ('Memphis', 'Houston'): 567, \
     ('Ashland', 'NYC'): 485, \
     ('Ashland', 'LA'): 2322, \
     ('Ashland', 'Chicago'): 324, \
     ('Ashland', 'Houston'): 1236 }
P = 2

model.x = pyo.Var(W, C, bounds=(0,1))
model.y = pyo.Var(W, within=pyo.Binary)

@model.Objective()
def obj(m):
    return sum(d[w,c]*m.x[w,c] for w in W for c in C)

@model.Constraint(C)
def one_per_cust(m, c):
    return sum(m.x[w,c] for w in W) == 1

@model.Constraint(W,C)
def warehouse_active(m, w, c):
    return m.x[w,c] <= m.y[w]

@model.Constraint()
def num_warehouses(m):
    return sum(m.y[w] for w in W) <= P

pyo.SolverFactory('glpk').solve(model)

model.y.pprint()
model.x.pprint()
------------------

----- stdout -----
WARNING: Could not locate the 'glpsol' executable, which is required for
solver 'glpk'
------------------

[31m---------------------------------------------------------------------------[39m
[31mApplicationError[39m                          Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 41[39m
[32m     37[39m [38;5;129m@model[39m.Constraint()
[32m     38[39m [38;5;28;01mdef[39;00m [34mnum_warehouses[39m(m):
[32m     39[39m     [38;5;28;01mreturn[39;00m [38;5;28msum[39m(m.y[w] [38;5;28;01mfor[39;00m w [38;5;129;01min[39;00m W) <= P
[32m---> [39m[32m41[39m [43mpyo[49m[43m.[49m[43mSolverFactory[49m[43m([49m[33;43m'[39;49m[33;43mglpk[39;49m[33;43m'[39;49m[43m)[49m[43m.[49m[43msolve[49m[43m([49m[43mmodel[49m[43m)[49m
[32m     43[39m model.y.pprint()
[32m     44[39m model.x.pprint()

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pyomo/opt/base/solvers.py:534[39m, in [36mOptSolver.solve[39m[34m(self, *args, **kwds)[39m
[32m    531[39m [38;5;28;01mdef[39;00m [34msolve[39m([38;5;28mself[39m, *args, **kwds):
[32m    532[39m [38;5;250m    [39m[33;03m"""Solve the problem"""[39;00m
[32m--> [39m[32m534[39m     [38;5;28;43mself[39;49m[43m.[49m[43mavailable[49m[43m([49m[43mexception_flag[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[32m    535[39m     [38;5;66;03m#[39;00m
[32m    536[39m     [38;5;66;03m# If the inputs are models, then validate that they have been[39;00m
[32m    537[39m     [38;5;66;03m# constructed! Collect suffix names to try and import from solution.[39;00m
[32m    538[39m     [38;5;66;03m#[39;00m
[32m    539[39m     [38;5;28;01mfrom[39;00m [34;01mpyomo[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01mbase[39;00m[34;01m.[39;00m[34;01mblock[39;00m [38;5;28;01mimport[39;00m BlockData

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pyomo/opt/solver/shellcmd.py:140[39m, in [36mSystemCallSolver.available[39m[34m(self, exception_flag)[39m
[32m    138[39m     [38;5;28;01mif[39;00m exception_flag:
[32m    139[39m         msg = [33m"[39m[33mNo executable found for solver [39m[33m'[39m[38;5;132;01m%s[39;00m[33m'[39m[33m"[39m
[32m--> [39m[32m140[39m         [38;5;28;01mraise[39;00m ApplicationError(msg % [38;5;28mself[39m.name)
[32m    141[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mFalse[39;00m
[32m    142[39m [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m

[31mApplicationError[39m: No executable found for solver 'glpk'

