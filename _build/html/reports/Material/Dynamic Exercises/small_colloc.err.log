Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pyomo.environ as pyo

numcollocation = 4
numfinelems = 2

model = m = pyo.ConcreteModel()
m.colloc = pyo.RangeSet(0,numcollocation-1)
m.fe = pyo.RangeSet(0,numfinelems-1)
m.h = pyo.Param(initialize=1.0/numfinelems)

m.z = pyo.Var(m.fe,m.colloc)
m.dzdt = pyo.Var(m.fe,m.colloc)
m.time = pyo.Var(m.fe,m.colloc)

# Collocation matrix for Radau points [0, 0.155051, 0.644949, 1]
adot=[
[-9.000001008080126, -4.1393887736243791, 1.7393879671602779, -3.0000002520200333],
[10.048810106494384, 3.2247461916839306, -3.5678400771209411, 5.5319724150606273],
[-1.3821424037453669, 1.1678398419022438, 0.77525464838285485, -7.5319723310539404],
[0.33333330533110994, -0.25319725996179565, 1.0531974615778044, 5.000000168013341],
]

m.obj = pyo.Objective(expr=1) # Dummy Objective

def _zdot(m, i, j):
    return m.dzdt[i,j] == m.z[i,j]**2 - 2*m.z[i,j] +1
m.zdot = pyo.Constraint(m.fe,m.colloc,rule=_zdot)

# Collocation Equations
def _colloc_eq(m,i,j):
    if j == 0:
        return pyo.Constraint.Skip
    return m.h*(m.dzdt[i,j]) == sum(m.z[i,k]*adot[k][j] for k in range(0,numcollocation))
m.colloc_eq = pyo.Constraint(m.fe,m.colloc,rule=_colloc_eq)

def _colloc_eq_t(m,i,j):
    if j == 0:
        return pyo.Constraint.Skip
    return m.h == sum(m.time[i,k]*adot[k][j] for k in range(0,numcollocation))
m.colloc_eq_t = pyo.Constraint(m.fe,m.colloc,rule=_colloc_eq_t)


# Continuity Equations
def _cont_z(m,i):
    if i == 0:
        return pyo.Constraint.Skip
    return m.z[i,0] == m.z[i-1,numcollocation-1]
m.cont_z = pyo.Constraint(m.fe,rule=_cont_z)

def _cont_t(m,i):
    if i == 0:
        return pyo.Constraint.Skip
    return m.time[i,0] == m.time[i-1,numcollocation-1]
m.cont_t = pyo.Constraint(m.fe,rule=_cont_t)

# Initial Conditions
def _init_con(m):
    return m.z[0,0] == -3
m.init_con = pyo.Constraint(rule=_init_con)

def _init_con_t(m):
    return m.time[0,0] == 0
m.init_con_t = pyo.Constraint(rule=_init_con_t)

solver = pyo.SolverFactory('ipopt')
solver.solve(m,tee=True)

import matplotlib.pyplot as plt

analytical_t = [0.01*i for i in range(0,101)]
analytical_z = [(4*t-3)/(4*t+1) for t in analytical_t]

findiff_t = []
findiff_z = []

for i in range(0,numfinelems):
    for j in range(0,numcollocation):
        if i != 0 and j == 0:
            continue
        findiff_t.append(pyo.value(m.time[i,j]))
        findiff_z.append(pyo.value(m.z[i,j]))

plt.plot(analytical_t,analytical_z,'b',label='analytical solution')
plt.plot(findiff_t,findiff_z,'ro--',label='collocation solution')
plt.legend(loc='best')
plt.xlabel("t")
plt.show()
------------------

----- stdout -----
WARNING: Could not locate the 'ipopt' executable, which is required for solver
ipopt
------------------

[31m---------------------------------------------------------------------------[39m
[31mApplicationError[39m                          Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 66[39m
[32m     63[39m m.init_con_t = pyo.Constraint(rule=_init_con_t)
[32m     65[39m solver = pyo.SolverFactory([33m'[39m[33mipopt[39m[33m'[39m)
[32m---> [39m[32m66[39m [43msolver[49m[43m.[49m[43msolve[49m[43m([49m[43mm[49m[43m,[49m[43mtee[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[32m     68[39m [38;5;28;01mimport[39;00m [34;01mmatplotlib[39;00m[34;01m.[39;00m[34;01mpyplot[39;00m [38;5;28;01mas[39;00m [34;01mplt[39;00m
[32m     70[39m analytical_t = [[32m0.01[39m*i [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([32m0[39m,[32m101[39m)]

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pyomo/opt/base/solvers.py:534[39m, in [36mOptSolver.solve[39m[34m(self, *args, **kwds)[39m
[32m    531[39m [38;5;28;01mdef[39;00m [34msolve[39m([38;5;28mself[39m, *args, **kwds):
[32m    532[39m [38;5;250m    [39m[33;03m"""Solve the problem"""[39;00m
[32m--> [39m[32m534[39m     [38;5;28;43mself[39;49m[43m.[49m[43mavailable[49m[43m([49m[43mexception_flag[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[32m    535[39m     [38;5;66;03m#[39;00m
[32m    536[39m     [38;5;66;03m# If the inputs are models, then validate that they have been[39;00m
[32m    537[39m     [38;5;66;03m# constructed! Collect suffix names to try and import from solution.[39;00m
[32m    538[39m     [38;5;66;03m#[39;00m
[32m    539[39m     [38;5;28;01mfrom[39;00m [34;01mpyomo[39;00m[34;01m.[39;00m[34;01mcore[39;00m[34;01m.[39;00m[34;01mbase[39;00m[34;01m.[39;00m[34;01mblock[39;00m [38;5;28;01mimport[39;00m BlockData

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pyomo/opt/solver/shellcmd.py:140[39m, in [36mSystemCallSolver.available[39m[34m(self, exception_flag)[39m
[32m    138[39m     [38;5;28;01mif[39;00m exception_flag:
[32m    139[39m         msg = [33m"[39m[33mNo executable found for solver [39m[33m'[39m[38;5;132;01m%s[39;00m[33m'[39m[33m"[39m
[32m--> [39m[32m140[39m         [38;5;28;01mraise[39;00m ApplicationError(msg % [38;5;28mself[39m.name)
[32m    141[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mFalse[39;00m
[32m    142[39m [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m

[31mApplicationError[39m: No executable found for solver 'ipopt'

